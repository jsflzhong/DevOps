apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-jsflzhong
  namespace: jenkins
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 2Gi
  hostPath:
    path: /kindData/
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-jsflzhong
  namespace: jenkins
spec:
  volumeName: pv-jsflzhong
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins
        image: jenkins/jenkins:lts
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "2048Mi"
            cpu: "1000m"
        ports:
          - name: http-port
            #### The targetPort in the Service manifest, and the containerPort in the Deployment manifest need to match the port that the server inside the container is listening on
            containerPort: 8080
          - name: jnlp-port
            containerPort: 50000
        volumeMounts:
          - name: jenkins-vol
            mountPath: /kindData/
      volumes:
        - name: jenkins-vol
          #emptyDir: {}
          persistentVolumeClaim:
            claimName: pvc-jsflzhong
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: jenkins #lowercase first letter
  labels:
    app: jenkins
spec:
  #type: NodePort
  #type: ClusterIP
  selector:
    app: jenkins
  ports:
    #- name: http
    # Port accessible inside cluster
  - port: 8080
    # Port to forward to inside the pod
    #### The targetPort in the Service manifest, and the containerPort in the Deployment manifest need to match the port that the server inside the container is listening on
    #targetPort: 8080
    #nodePort: 30000
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp-svc
  namespace: jenkins
  labels:
    app: jenkins
spec:
  type: ClusterIP
  selector:
    app: jenkins
  ports:
  # Port accessible inside cluster
  - port: 50000
    # Port to forward to inside the pod
    # targetPort: 50000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: jenkins
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "server: hide";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Xss-Protection: 1";
spec:
  rules:
    #- host: jenkins.jsflzhong.com
    -  http:
        paths:
          - pathType: Prefix
            #path: /jenkins(/|$)(.*)
            path: /
            backend:
              service:
                name: jenkins-svc
                port:
                  number: 8080
    